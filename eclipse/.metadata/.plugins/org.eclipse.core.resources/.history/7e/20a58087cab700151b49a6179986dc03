package com.moldfire.mfsummoner.tileentity;

import java.util.Arrays;

import com.moldfire.mfsummoner.init.ModBlocks;

import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.nbt.NBTTagList;
import net.minecraft.server.gui.IUpdatePlayerListBox;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.util.ChatComponentText;
import net.minecraft.util.ChatComponentTranslation;
import net.minecraft.util.IChatComponent;

public class TileEntityCoreStabiliser extends TileEntity implements IUpdatePlayerListBox
{
	public static final String name = "tileEntityStabiliser";
	private ItemStack itemStack[] = new ItemStack[1];
	
	@Override
	public void writeToNBT(NBTTagCompound compound)
	{
		super.writeToNBT(compound);
		
		NBTTagList slots = new NBTTagList();
		for(int i = 0; i < this.itemStack.length; ++i)
		{
			if(this.itemStack[i] != null)
			{
				NBTTagCompound slot = new NBTTagCompound();
				slot.setByte("Slot", (byte)i);
				this.itemStack[i].writeToNBT(slot);
				slots.appendTag(slot);
			}
		}
		compound.setTag("Items", slots);
	}
	
	@Override
	public void readFromNBT(NBTTagCompound compound)
	{
		super.readFromNBT(compound);
		final byte NBT_TYPE_COMPOUND = 10;
		NBTTagList slots = compound.getTagList("Items", NBT_TYPE_COMPOUND);
		
		Arrays.fill(itemStack, null);
		for(int i = 0; i < slots.tagCount(); ++i)
		{
			NBTTagCompound slot = slots.getCompoundTagAt(i);
			int slotIndex = slot.getByte("Slot") & 255;
			
			if(slotIndex >=0 && slotIndex <= this.itemStack.length)
			{
				this.itemStack[slotIndex] = ItemStack.loadItemStackFromNBT(slot);
			}
		}
	}

	@Override
	public void update() 
	{
		if(!this.worldObj.isRemote)
		{
			if(this.getWorld().getBlockState(this.pos.add(3, 0, 0)).getBlock() == ModBlocks.alterStabiliser)
			{
				if(this.getWorld().getBlockState(this.pos.add(-3, 0, 0)).getBlock() == ModBlocks.alterStabiliser)
				{
					if(this.getWorld().getBlockState(this.pos.add(0, 0, 3)).getBlock() == ModBlocks.alterStabiliser)
					{
						if(this.getWorld().getBlockState(this.pos.add(0, 0, -3)).getBlock() == ModBlocks.alterStabiliser)
						{
							System.out.println("All Stabilisers accounted for");
							return;
						}
					}
				}
			}
			else
			{
				if(this.getWorld().getBlockState(this.pos.add(3, 0, 0)).getBlock() == ModBlocks.alterStabiliser)
				{
					this.getWorld().setBlockToAir(this.pos.add(3, 0, 0));
					if(this.getWorld().getBlockState(this.pos.add(-3, 0, 0)).getBlock() == ModBlocks.alterStabiliser)
					{
						this.getWorld().setBlockToAir(this.pos.add(-3, 0, 0));
						if(this.getWorld().getBlockState(this.pos.add(0, 0, 3)).getBlock() == ModBlocks.alterStabiliser)
						{
							this.getWorld().setBlockToAir(this.pos.add(0, 0, 3));
							if(this.getWorld().getBlockState(this.pos.add(0, 0, -3)).getBlock() == ModBlocks.alterStabiliser)
							{
								this.getWorld().setBlockToAir(this.pos.add(0, 0, -3));
								return;
							}
						}
					}
				}
			}
		}
	}
}
